version: '3.8'

services:
  encoding-converter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: encoding-converter-pro
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    volumes:
      # 开发模式下可以挂载代码目录
      # - ./backend:/app/backend
      # - ./frontend:/app/frontend
      - app_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.encoding-converter.rule=Host(`encoding.localhost`)"
      - "traefik.http.services.encoding-converter.loadbalancer.server.port=5000"
    networks:
      - encoding-network

  # 可选：使用Nginx作为反向代理
  nginx:
    image: nginx:alpine
    container_name: encoding-converter-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - encoding-converter
    restart: unless-stopped
    networks:
      - encoding-network
    profiles:
      - production

volumes:
  app_data:
    driver: local

networks:
  encoding-network:
    driver: bridge 